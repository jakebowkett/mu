.tree {
    list-style-type: none;
    padding: 0;
    margin: 0;
    user-select: none;
    overflow: hidden;
    position: relative;
}
.tree li {
    position: relative;
}
.tree li:not(.open) li {
    margin-top: -2rem;
}
.tree .tree li {
    margin-left: 1.5rem;
    transition-duration: 0.2s;
    transition-property: margin-top;
}

/* ============================
    Hierarchy Lines.
============================= */

.tree li:not(:last-child)::before,
.tree .tree li::after {
    content: "";
    position: absolute;
}
.tree li:not(:last-child)::before {
    border-left: 2px solid var(--accent);
    top: 0;
    bottom: 0;
    right: calc(100% + 0.7rem);
}
.tree .tree li::after {
    border-left: 2px solid var(--accent);
    border-bottom: 2px solid var(--accent);
    width:  0.6rem;
    height: 2rem;
    top: -1rem;
    right: calc(100% + 0.1rem);
}
.tree .tree li:last-child:after {
    top: -1.3rem;
    border-bottom-width: 3px;
    transform: skewY(40deg);
}


.tree .item {
    display: flex;
    align-items: center;
    height: 2rem;
    box-sizing: border-box;
    cursor: pointer;
}
.tree .item:not(.classified):not(.selected):hover .text {
    background: var(--accent);
    text-shadow: var(--bgTextShadow);
    color: var(--bg);
}
.tree .arrow {
    display: flex;
    overflow: hidden;
    height: 100%;
}
.tree .dir > .item > .icon {
    margin-left: 0.2rem;
    margin-right: 0.1rem;
}
.tree .icon {
    --dim: 1.2rem;
    flex: 0 0 var(--dim);
    height:   var(--dim);
    align-self: center;
    box-sizing: border-box;
    position: relative;
}
.tree svg {
    position: absolute;
    top:    0;
    bottom: 0;
    left:   0;
    right:  0;
}
.tree svg > * {
    fill: var(--accent);
}
.tree .text {
    color: var(--accent);
    text-transform: uppercase;
    padding: 0 0.2rem;
    margin-left:  0.1rem;
    margin-right: 0.2rem;
    white-space: nowrap;
}

/* ============================
    Leaf nodes.
============================= */
:not(.dir) > .item .arrow {
    flex: 0 1 0rem;
    transition-duration: 0.3s;
    transition-property: flex-basis;
}
.item .arrow::before {
    content: "";
    margin-top: calc(1rem - 1px);
    border-top: 2px solid var(--accent);
    flex: 1 1 100%;
}
:not(.dir) > .item .arrow::before {
    margin-right: -0.8rem;
}
:not(.dir) > .item.selected .arrow,
:not(.dir) > .item:hover .arrow {
    flex: 0 1 100%;
}
:not(.dir) > .item.selected .text {
    background: var(--accentAlt);
    text-shadow: var(--bgTextShadow);
    color: var(--bg);
}
:not(.dir) > .item.selected .arrow::before {
    border-top-color: var(--accentAlt);
}
:not(.dir) > .item.selected .arrow svg > * {
    fill: var(--accentAlt);
}
:not(.dir) > .item .arrow::after {
    content: "Beholding";
    align-self: center;
    margin-top: -2px;
    text-transform: uppercase;
    font-size: 0.9rem;
    color: var(--accentAlt);
    background: var(--bg);
    position: absolute;
    right: 1.5rem;
    overflow: hidden;
    box-sizing: border-box;
    width: 0;
    transition-duration: 0.2s;
    transition-property: width;
    display: flex;
    justify-content: center;
}
:not(.dir) > .item.selected .arrow::after {
    /* padding: 0 0.2rem; */
    width: 5.4rem;
}

/* ============================
    Dir nodes.
============================= */
.dir > .item .text {
    font-weight: bold;
    text-shadow: none !important;
}
.dir > .item .arrow {
    flex: 0 1 100%;
}
.dir:not(.open) > .item .arrow::before {
    border-top-style: dashed;
}
.dir > .item .arrow::before {
    margin-right: 0.35rem;
}
.dir > .item .arrow .icon {
    --dim: 1.3rem;
    flex: 0 0 var(--dim);
    height: var(--dim);
    background: var(--accent);
    border-radius: 10rem;
    transform: rotateZ(90deg);
    transition-duration: 0.2s;
    transition-property: transform;
}
.dir.open > .item .arrow .icon {
    transform: rotateZ(-90deg);
}
.dir > .item:hover .arrow .icon {
    transform: rotateZ(180deg);
}
.dir > .item .arrow svg {
    --pad: 0.1rem;
    top:    var(--pad);
    bottom: var(--pad);
    left:   var(--pad);
    right:  var(--pad);
    transform: translateX(1px);
}
.dir > .item .arrow svg > * {
    fill: var(--bg);
}

/* ============================
    Redacted nodes.
============================= */
.tree .item.redacted:not(.selected) .text {
    background: var(--accent);
}
.tree .item.redacted:not(.classified):not(.selected):hover .text {
    color: var(--accent);
}
.tree .item.redacted.selected .text {
    color: var(--accentAlt);
}

/* ============================
    Classified nodes.
============================= */
.tree .item.classified {
    position: relative;
}
.tree .item.item.classified:hover {
    animation: error 6s linear infinite;
}
.tree .item.classified .arrow {
    display: none;
}
.tree .item.classified::before {
    position: absolute;
    right: 0.5rem;
    text-transform: uppercase;
    font-size: 0.9rem;
    color: var(--err);
    text-shadow: 0.5px 0 0 var(--err);
    padding: 0 0.2rem;
}
.tree .item.classified:hover::before {
    content: "Classified";
    color: var(--bg);
    text-shadow: var(--bgTextShadow);
    background: var(--err);
    animation: classified 6s linear infinite;
}
.tree .item.classified .text {
    color: var(--err);
    text-shadow: 0.5px 0 0 var(--err);
}
.tree .item.classified.redacted .text {
    background: var(--err);
}

@keyframes classified {
      4% { content: "Classified"; }
     25% { content: "Classified"; }
     26% { content: "Cease & Desist"; }
    100% { content: "Cease & Desist"; }
}

@keyframes error {
      0% { transform: skewX(  0deg); }
      1% { transform: skewX( 25deg); }
      2% { transform: skewX(-35deg); }
      3% { transform: skewX(  0deg); }
      4% { transform: skewX(  0deg); }
     20% { opacity: 1; }
     21% { opacity: 0; }
     22% { opacity: 0; transform: skewX(  0deg); }
     23% { opacity: 1; transform: skewX( 25deg); }
     24% { opacity: 1; transform: skewX(-35deg); }
     25% { opacity: 0; transform: skewX(  0deg); }
     26% { opacity: 0; transform: skewX(  0deg); }
     27% { opacity: 1; }
     29% { opacity: 1; }
     31% { opacity: 0; }
     32% { opacity: 0; }
     33% { opacity: 1; }
     34% { opacity: 1; }
     35% { opacity: 0; }
     36% { opacity: 0; }
     37% { opacity: 1; }
     20% { opacity: 1; }

     69% { opacity: 1; transform: skewX(  0deg); }
     70% { opacity: 0; transform: skewX( 25deg); }
     71% { opacity: 0; transform: skewX(-35deg); }
     72% { opacity: 1; transform: skewX(  0deg); }

    100% { opacity: 1; transform: skewX(  0deg); }
}